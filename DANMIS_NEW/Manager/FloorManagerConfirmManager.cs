#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 05/11/2021 14:47:58
//     Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Utilities.Extensions;
using DANMIS_NEW.Interface;
using DANMIS_NEW.Models;
using DANMIS_NEW.ViewModel;
using DANMIS_NEW.ViewModel.ListResult;
using DANMIS_NEW.ViewModel.SearchModel;
using ResourceLibrary;

namespace DANMIS_NEW.Manager
{
    public class FloorManagerConfirmManager : IFloorManagerConfirmManager
    {
        readonly IFloorManagerConfirmRepository _floorManagerConfirmRepository;
        readonly IUserRepository _userRepository;
        readonly IFactoryItemsRepository _factoryItemsRepository;

        public FloorManagerConfirmManager(IFloorManagerConfirmRepository floorManagerConfirmRepository,
            IUserRepository userRepository, IFactoryItemsRepository factoryItemsRepository)
        {
            _floorManagerConfirmRepository = floorManagerConfirmRepository;
            _userRepository = userRepository;
            _factoryItemsRepository = factoryItemsRepository;
        }

        /// <summary>
        /// 建立 FloorManagerConfirm
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public void Create(FloorManagerConfirmViewModel entity)
        {
            var item = (FloorManagerConfirm)entity;

            using (var transaction = _floorManagerConfirmRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    _floorManagerConfirmRepository.Create(item);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 刪除 FloorManagerConfirm
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public void Delete(List<Guid> id)
        {
            using (var transaction = _floorManagerConfirmRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var itemSet = _floorManagerConfirmRepository.Where(x => id.Contains(x.ID)).ToList();
                    if (itemSet.Any())
                    {
                        foreach (var item in itemSet)
                        {
                            _floorManagerConfirmRepository.Delete(item);
                        }
                    }
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 取得 FloorManagerConfirm
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public FloorManagerConfirmViewModel GetByID(Guid id)
        {
            var item = _floorManagerConfirmRepository.GetByID(id);
            var result = (FloorManagerConfirmViewModel)item;

            return result;
        }

        /// <summary>
        /// 分頁
        /// </summary>
        /// <param name="searchModel"></param>
        /// <returns></returns>
        public Paging<FloorManagerConfirmListResult> Paging(FloorManagerConfirmSearchModel searchModel)
        {
            // 預設集合
            var temp = _floorManagerConfirmRepository.GetAll();
            var user = _userRepository.GetAll();
            var items = _factoryItemsRepository.GetAll();

            // 將 DB 資料轉換為列表頁呈現資料
            var tempResult = from x in temp
                             select new FloorManagerConfirmListResult
                             {
                                 SequenceNo = x.SequenceNo,
                                 ID = x.ID,
                                 ApplyItemID = x.ApplyItemID,
                                 ApplyWDID = x.ApplyWDID,
                                 ApplyBrand = x.ApplyBrand,
                                 ApplyName = string.Concat(user.FirstOrDefault(y => y.WDID == x.ApplyWDID).EmpLocName, "(", user.FirstOrDefault(y => y.WDID == x.ApplyWDID).EmpEngName, ")"),
                                 ApplyItemName = items.FirstOrDefault(y => y.ID == x.ApplyItemID).ItemName,
                                 ApplyQty = x.ApplyQty,
                                 Status = x.Status,
                                 UpdateUser = x.UpdateUser,
                                 UpdateTime = x.UpdateTime,
                             };

            // 如有篩選條件，進行篩選
            if (!string.IsNullOrWhiteSpace(searchModel.Search))
            {
                var search = searchModel.Search.ToLower();
                tempResult = tempResult.Where(x =>
                    x.ApplyName.Contains(search) ||
                    x.ApplyBrand.Contains(search) ||
                    x.ApplyItemName.Contains(search) ||
                    x.Status.Contains(search) ||
                    x.UpdateUser.Contains(search) ||
                    false);
            }

            // 進行分頁處理
            var result = new Paging<FloorManagerConfirmListResult>();
            result.total = tempResult.Count();
            result.rows = tempResult
                .OrderBy(searchModel.Sort, searchModel.Order)
                .Skip(searchModel.Offset)
                .Take(searchModel.Limit)
                .ToList();

            return result;
        }

        /// <summary>
        /// 更新 FloorManagerConfirm
        /// </summary>
        /// <param name="entity"></param>
        public void Update(FloorManagerConfirmViewModel entity)
        {
            using (var transaction = _floorManagerConfirmRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var source = _floorManagerConfirmRepository.GetByID(entity.ID);
                    source.ApplyWDID = entity.ApplyWDID;
                    source.ApplyBrand = entity.ApplyBrand ?? string.Empty;
                    source.ApplyItemID = entity.ApplyItemID;
                    source.ApplyQty = entity.ApplyQty;
                    source.Status = entity.Status ?? string.Empty;
                    source.UpdateUser = entity.UpdateUser ?? string.Empty;
                    source.UpdateTime = entity.UpdateTime;

                    _floorManagerConfirmRepository.Update(source);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }
    }
}
#pragma warning restore 1591