#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 05/12/2021 17:15:08
//     Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Utilities.Extensions;
using DANMIS_NEW.Interface;
using DANMIS_NEW.Models;
using DANMIS_NEW.ViewModel;
using DANMIS_NEW.ViewModel.ListResult;
using DANMIS_NEW.ViewModel.SearchModel;
using ResourceLibrary;

namespace DANMIS_NEW.Manager
{
    public class BrandItemsMgmtManager : IBrandItemsMgmtManager
    {
        readonly IBrandItemsMgmtRepository _brandItemsMgmtRepository;
        readonly IFactoryRepository _factoryRepository;
        public BrandItemsMgmtManager(IBrandItemsMgmtRepository brandItemsMgmtRepository, IFactoryRepository factoryRepository)
        {
            _brandItemsMgmtRepository = brandItemsMgmtRepository;
            _factoryRepository = factoryRepository;
        }

        /// <summary>
        /// 建立 BrandItemsMgmt
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public void Create(BrandItemsMgmtViewModel entity)
        {
            var item = (BrandItemsMgmt)entity;

            using (var transaction = _brandItemsMgmtRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    _brandItemsMgmtRepository.Create(item);

                    // 取得所有廠商物品
                    var factoryItems = _factoryRepository.GetAll().ToList();


                    // 新增所有廠商物品到BrandItems
                    List<BrandItems> brandItems = new List<BrandItems>();



                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 刪除 BrandItemsMgmt
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public void Delete(List<Guid> id)
        {
            using (var transaction = _brandItemsMgmtRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var itemSet = _brandItemsMgmtRepository.Where(x => id.Contains(x.ID)).ToList();
                    if (itemSet.Any())
                    {
                        foreach (var item in itemSet)
                        {
                            _brandItemsMgmtRepository.Delete(item);
                        }
                    }
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 取得 BrandItemsMgmt
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public BrandItemsMgmtViewModel GetByID(Guid id)
        {
            var item = _brandItemsMgmtRepository.GetByID(id);
            var result = (BrandItemsMgmtViewModel)item;

            return result;
        }

        /// <summary>
        /// 分頁
        /// </summary>
        /// <param name="searchModel"></param>
        /// <returns></returns>
        public Paging<BrandItemsMgmtListResult> Paging(BrandItemsMgmtSearchModel searchModel)
        {
            // 預設集合
            var temp = _brandItemsMgmtRepository.GetAll();

            // 將 DB 資料轉換為列表頁呈現資料
            var tempResult = from x in temp
                             select new BrandItemsMgmtListResult
                             {
                                 SequenceNo = x.SequenceNo,
                                 ID = x.ID,                                 
                                 BrandName = x.BrandName,
                                 UpdateUser = x.UpdateUser,
                                 UpdateTime = x.UpdateTime,
                             };

            // 如有篩選條件，進行篩選
            if (!string.IsNullOrWhiteSpace(searchModel.Search))
            {
                var search = searchModel.Search.ToLower();
                tempResult = tempResult.Where(x =>
                    x.BrandName.Contains(search) ||
                    x.BrandItemsID.Contains(search) ||
                    x.UpdateUser.Contains(search) ||
                    false);
            }

            // 進行分頁處理
            var result = new Paging<BrandItemsMgmtListResult>();
            result.total = tempResult.Count();
            result.rows = tempResult
                .OrderBy(searchModel.Sort, searchModel.Order)
                .Skip(searchModel.Offset)
                .Take(searchModel.Limit)
                .ToList();

            return result;
        }

        /// <summary>
        /// 更新 BrandItemsMgmt
        /// </summary>
        /// <param name="entity"></param>
        public void Update(BrandItemsMgmtViewModel entity)
        {
            using (var transaction = _brandItemsMgmtRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var source = _brandItemsMgmtRepository.GetByID(entity.ID);
                    source.BrandName = entity.BrandName;                    
                    source.UpdateUser = entity.UpdateUser ?? string.Empty;
                    source.UpdateTime = entity.UpdateTime;

                    _brandItemsMgmtRepository.Update(source);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }
    }
}
#pragma warning restore 1591