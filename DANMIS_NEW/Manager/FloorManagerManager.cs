#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 05/05/2021 16:39:30
//     Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Utilities.Extensions;
using DANMIS_NEW.Interface;
using DANMIS_NEW.Models;
using DANMIS_NEW.ViewModel;
using DANMIS_NEW.ViewModel.ListResult;
using DANMIS_NEW.ViewModel.SearchModel;
using ResourceLibrary;
using Newtonsoft.Json;

namespace DANMIS_NEW.Manager
{
    public class FloorManagerManager : IFloorManagerManager
    {
        readonly IFloorManagerRepository _floorManagerRepository;
        readonly IUserRepository _userRepository;

        public FloorManagerManager(IFloorManagerRepository floorManagerRepository, IUserRepository userRepository)
        {
            _floorManagerRepository = floorManagerRepository;
            _userRepository = userRepository;
        }

        /// <summary>
        /// 建立 FloorManager
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public void Create(FloorManagerViewModel entity)
        {
            var item = (FloorManager)entity;

            using (var transaction = _floorManagerRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    _floorManagerRepository.Create(item);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 刪除 FloorManager
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public void Delete(List<Guid> id)
        {
            using (var transaction = _floorManagerRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var itemSet = _floorManagerRepository.Where(x => id.Contains(x.ID)).ToList();
                    if (itemSet.Any())
                    {
                        foreach (var item in itemSet)
                        {
                            _floorManagerRepository.Delete(item);
                        }
                    }
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 取得 FloorManager
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public FloorManagerViewModel GetByID(Guid id)
        {
            var item = _floorManagerRepository.GetByID(id);
            var result = (FloorManagerViewModel)item;

            return result;
        }

        /// <summary>
        /// 分頁
        /// </summary>
        /// <param name="searchModel"></param>
        /// <returns></returns>
        public Paging<FloorManagerListResult> Paging(FloorManagerSearchModel searchModel)
        {
            var users = _userRepository.GetAll().Where(x => x.EmpQuitDate == null && x.WDID != null).ToList();

            // 預設集合
            var temp = _floorManagerRepository.GetAll();

            if (searchModel.IsEnable.HasValue)
            {
                temp = temp.Where(x => x.IsEnable == searchModel.IsEnable.Value);
            }

            // 將 DB 資料轉換為列表頁呈現資料
            var tempResult = from x in temp
                             select new FloorManagerListResult
                             {
                                 SequenceNo = x.SequenceNo,
                                 ID = x.ID,
                                 WDID = x.WDID,
                                 Brand = x.Brand,
                                 Name = string.Empty,
                                 IsEnable = x.IsEnable,
                                 UpdateUser = x.UpdateUser,
                                 UpdateTime = x.UpdateTime,
                             };

            // 如有篩選條件，進行篩選
            if (!string.IsNullOrWhiteSpace(searchModel.Search))
            {
                var search = searchModel.Search.ToLower();
                tempResult = tempResult.Where(x =>
                    x.WDID.Contains(search) ||
                    x.Brand.Contains(search) ||
                    x.UpdateUser.Contains(search) ||
                    false);
            }

            // 進行分頁處理
            var result = new Paging<FloorManagerListResult>();
            result.total = tempResult.Count();
            result.rows = tempResult
                .OrderBy(searchModel.Sort, searchModel.Order)
                .Skip(searchModel.Offset)
                .Take(searchModel.Limit)
                .ToList();

            foreach (var item in result.rows)
            {
                var user = users.FirstOrDefault(x => x.WDID == item.WDID) ?? new User();
                item.Name = string.Concat(user.EmpLocName, "(", user.EmpEngName, ")");
                item.Brand = string.Join(", " , JsonConvert.DeserializeObject<List<string>>(item.Brand));
            } 

            return result;
        }

        /// <summary>
        /// 更新 FloorManager
        /// </summary>
        /// <param name="entity"></param>
        public void Update(FloorManagerViewModel entity)
        {
            using (var transaction = _floorManagerRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var source = _floorManagerRepository.GetByID(entity.ID);
                    source.WDID = entity.WDID ?? string.Empty;
                    source.Brand = JsonConvert.SerializeObject(entity.BrandIDs) ?? string.Empty;
                    source.IsEnable = entity.IsEnable;
                    source.UpdateUser = entity.UpdateUser ?? string.Empty;
                    source.UpdateTime = entity.UpdateTime;

                    _floorManagerRepository.Update(source);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }
    }
}
#pragma warning restore 1591