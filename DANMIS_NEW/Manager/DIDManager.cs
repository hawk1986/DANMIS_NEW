#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 04/28/2021 11:02:34
//     Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Utilities.Extensions;
using DANMIS_NEW.Interface;
using DANMIS_NEW.Models;
using DANMIS_NEW.ViewModel;
using DANMIS_NEW.ViewModel.ListResult;
using DANMIS_NEW.ViewModel.SearchModel;
using ResourceLibrary;
using System.Web.Mvc;

namespace DANMIS_NEW.Manager
{
    public class DIDManager : IDIDManager
    {
        readonly IDIDRepository _dIDRepository;
        readonly IUserRepository _userRepository;

        public DIDManager(IDIDRepository dIDRepository, IUserRepository userRepository)
        {
            _dIDRepository = dIDRepository;
            _userRepository = userRepository;
        }

        /// <summary>
        /// 建立 DID
        /// </summary>
        /// <param name="entity"></param>
        /// <returns></returns>
        public void Create(DIDViewModel entity)
        {
            var item = (DID)entity;

            using (var transaction = _dIDRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    _dIDRepository.Create(item);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 刪除 DID
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public void Delete(List<Guid> id)
        {
            using (var transaction = _dIDRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var itemSet = _dIDRepository.Where(x => id.Contains(x.ID)).ToList();
                    if (itemSet.Any())
                    {
                        foreach (var item in itemSet)
                        {
                            _dIDRepository.Delete(item);
                        }
                    }
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        /// <summary>
        /// 根據 id 取得 DID
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public DIDViewModel GetByID(Guid id)
        {
            var item = _dIDRepository.GetByID(id);
            var result = (DIDViewModel)item;
            var user = _userRepository.GetAll().FirstOrDefault(x => x.WDID == result.WDID);
            if (user != null)
            {
                result.User.Name = string.Concat(user.EmpLocName, "(", user.EmpEngName, ")");
                result.User.Email = user.EmpCompEmail;
            }

            return result;
        }

        /// <summary>
        /// 分頁
        /// </summary>
        /// <param name="searchModel"></param>
        /// <returns></returns>
        public Paging<DIDListResult> Paging(DIDSearchModel searchModel)
        {
            // 預設集合
            var temp = _dIDRepository.GetAll();

            // 將 DB 資料轉換為列表頁呈現資料
            var tempResult = from x in temp
                             select new DIDListResult
                             {
                                 SequenceNo = x.SequenceNo,
                                 ID = x.ID,
                                 DID1 = x.DID1,
                                 WDID = x.WDID,
                                 Brand = x.Brand,
                                 User = string.Empty,
                                 Email = string.Empty,
                                 UpdateUser = x.UpdateUser,
                                 UpdateTime = x.UpdateTime,
                             };

            // 如有篩選條件，進行篩選
            if (!string.IsNullOrWhiteSpace(searchModel.Search))
            {
                var search = searchModel.Search.ToLower();
                tempResult = tempResult.Where(x =>
                    x.DID1.Contains(search) ||
                    x.WDID.Contains(search) ||                    
                    x.UpdateUser.Contains(search) ||
                    false);
            }

            if (!string.IsNullOrEmpty(searchModel.Brand))
                tempResult = tempResult.Where(x =>
                        x.Brand == searchModel.Brand ||
                        false);

            // 進行分頁處理
            var result = new Paging<DIDListResult>();
            result.total = tempResult.Count();
            result.rows = tempResult
                .OrderBy(searchModel.Sort, searchModel.Order)
                .Skip(searchModel.Offset)
                .Take(searchModel.Limit)
                .ToList();

            var users = _userRepository.GetAll().Where(x => x.EmpQuitDate == null && x.WDID != null).ToList();

            foreach (var item in result.rows)
            {
                var user = users.FirstOrDefault(x => x.WDID == item.WDID);
                if (user != null)
                {
                    item.User = string.Concat(user.EmpLocName, "(", user.EmpEngName, ")");
                    item.Email = user.EmpCompEmail ?? string.Empty;
                }
            }

            return result;
        }

        /// <summary>
        /// 更新 DID
        /// </summary>
        /// <param name="entity"></param>
        public void Update(DIDViewModel entity)
        {
            using (var transaction = _dIDRepository.dbContext.Database.BeginTransaction())
            {
                try
                {
                    var source = _dIDRepository.GetByID(entity.ID);
                    source.DID1 = entity.DID1 ?? string.Empty;
                    source.WDID = entity.WDID ?? string.Empty;
                    source.Memo = entity.Memo ?? string.Empty;
                    source.UpdateUser = entity.UpdateUser ?? string.Empty;
                    source.UpdateTime = entity.UpdateTime;

                    _dIDRepository.Update(source);
                    transaction.Commit();
                }
                catch
                {
                    transaction.Rollback();
                    throw;
                }
            }
        }

        public SelectList GetSelectList(string brand, string did)
        {
            // 預設集合
            var temp = _dIDRepository.GetAll().Where(x => x.WDID == null || x.WDID == "" || x.DID1 == did);

            // 將 DB 資料轉換為列表頁呈現資料
            var _tempResult = from x in temp
                              select new DIDListResult
                              {
                                  SequenceNo = x.SequenceNo,
                                  ID = x.ID,
                                  DID1 = x.DID1,
                                  WDID = x.WDID,
                                  Brand = x.Brand,
                                  User = string.Empty,
                                  Email = string.Empty,
                                  UpdateUser = x.UpdateUser,
                                  UpdateTime = x.UpdateTime,
                              };
            
            if(!string.IsNullOrEmpty(brand))
                _tempResult = _tempResult.Where(x => 
                    x.Brand == brand ||
                    false);

            // 進行分頁處理
            var tempResult = new Paging<DIDListResult>();
            tempResult.total = _tempResult.Count();
            tempResult.rows = _tempResult.OrderBy("DID1", "asc").ToList();

            var list = new List<SelectListItem>();
            foreach (var item in tempResult.rows)
            {
                list.Add(new SelectListItem { Value = item.DID1, Text = item.DID1 });
            }

            var result = new SelectList(list, "Value", "Text");

            return result;
        }
    }
}
#pragma warning restore 1591