#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Generated at 04/28/2021 16:58:54
//	   Runtime Version: 4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using ResourceLibrary;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.Mvc;

namespace DANMIS_NEW.ViewModel
{
    public class FactoryItemsBaseModel : PostedFileBaseModel
    {
        public FactoryItemsBaseModel()
        {
        }

        #region == DB Fields ==

        /// <summary>
        /// SequenceNo
        /// </summary>
        public int SequenceNo { get; set; }

        /// <summary>
        /// ID
        /// </summary>
        public Guid ID { get; set; }

        /// <summary>
        /// ItemName
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(50, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "ItemName", ResourceType = typeof(Resource))]
        public string ItemName { get; set; }

        /// <summary>
        /// ItemSpecification
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(50, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "ItemSpecification", ResourceType = typeof(Resource))]
        public string ItemSpecification { get; set; }

        /// <summary>
        /// ItemClass
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(50, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "ItemClass", ResourceType = typeof(Resource))]
        public string ItemClass { get; set; }

        /// <summary>
        /// ItemUnit
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(50, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "ItemUnit", ResourceType = typeof(Resource))]
        public string ItemUnit { get; set; }

        /// <summary>
        /// ItemPrice
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "AveragePrice", ResourceType = typeof(Resource))]
        public double ItemPrice { get; set; }

        /// <summary>
        /// ItemQty
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "ItemQty", ResourceType = typeof(Resource))]
        public int ItemQty { get; set; }

        /// <summary>
        /// ItemRequisitionQty
        /// </summary>
        //[Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "ItemRequisitionQty", ResourceType = typeof(Resource))]
        public int ItemRequisitionQty { get; set; }

        /// <summary>
        /// Factory
        /// </summary>
        //[Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [StringLength(50, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "FactoryItems", ResourceType = typeof(Resource))]
        public string Factory { get; set; }

        /// <summary>
        /// IsForStationery
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "IsInventoryMgmt", ResourceType = typeof(Resource))]
        public bool IsInventoryMgmt { get; set; }

        /// <summary>
        /// IsForStationery
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "IsForStationery", ResourceType = typeof(Resource))]
        public bool IsForStationery { get; set; }

        /// <summary>
        /// IsForColleague
        /// </summary>
        [Required(ErrorMessageResourceName = "RequiredError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "IsForColleague", ResourceType = typeof(Resource))]
        public bool IsForColleague { get; set; }

        /// <summary>
        /// IsAttached
        /// </summary>        
        [Display(Name = "IsAttached", ResourceType = typeof(Resource))]
        public bool IsAttached { get; set; }

        /// <summary>
        /// CreateUser
        /// </summary>
        [StringLength(50, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "CreateUser", ResourceType = typeof(Resource))]
        public string CreateUser { get; set; }

        /// <summary>
        /// CreateTime
        /// </summary>
        [Display(Name = "CreateTime", ResourceType = typeof(Resource))]
        [DisplayFormat(DataFormatString = "{0:yyyy/MM/dd HH:mm:ss}", ApplyFormatInEditMode = true)]
        public DateTime CreateTime { get; set; }

        /// <summary>
        /// UpdateUser
        /// </summary>
        [StringLength(50, ErrorMessageResourceName = "StringLengthError", ErrorMessageResourceType = typeof(Resource))]
        [Display(Name = "UpdateUser", ResourceType = typeof(Resource))]
        public string UpdateUser { get; set; }

        /// <summary>
        /// UpdateTime
        /// </summary>
        [Display(Name = "UpdateTime", ResourceType = typeof(Resource))]
        [DisplayFormat(DataFormatString = "{0:yyyy/MM/dd HH:mm:ss}", ApplyFormatInEditMode = true)]
        public DateTime UpdateTime { get; set; }

        #endregion == DB Fields ==
    }

    public class FactoryItemsViewModel : FactoryItemsBaseModel
    {
        public FactoryItemsViewModel()
        {
            this.Items = new ItemsViewModel();
        }

        #region == View Fields ==
        public SelectList YesNoList { get; set; }
        public SelectList _Factory { get; set; }
        public SelectList _ItemClass { get; set; }

        [Display(Name = "Items", ResourceType = typeof(Resource))]
        public ItemsViewModel Items { get; set; }

        [Display(Name = "StockQty", ResourceType = typeof(Resource))]
        public int StockQty { get; set; }
        #endregion == View Fields ==
    }
}
#pragma warning restore 1591